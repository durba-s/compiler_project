Category		Token ID	  Line No			Lexeme
--------------------------------------------------------------------
KEYWD_CONST  		69		[LINE NO: 3]		const
KEYWD_INT    		70		[LINE NO: 3]		int
IDENTIFIER			93		[LINE NO: 3]		N
OP_ASSGN     		34		[LINE NO: 3]		=
[INT_LIT]			88		[LINE NO: 3]		10
SYM_SEMICOLON		33		[LINE NO: 3]		;
KEYWD_INT    		70		[LINE NO: 4]		int
IDENTIFIER			93		[LINE NO: 4]		g
SYM_SB1      		36		[LINE NO: 4]		[
IDENTIFIER			93		[LINE NO: 4]		N
OP_COMMA     		35		[LINE NO: 4]		,
IDENTIFIER			93		[LINE NO: 4]		N
SYM_SB2      		37		[LINE NO: 4]		]
SYM_SEMICOLON		33		[LINE NO: 4]		;
KEYWD_BOOL   		83		[LINE NO: 5]		bool
IDENTIFIER			93		[LINE NO: 5]		visited
SYM_SB1      		36		[LINE NO: 5]		[
IDENTIFIER			93		[LINE NO: 5]		N
SYM_SB2      		37		[LINE NO: 5]		]
SYM_SEMICOLON		33		[LINE NO: 5]		;
KEYWD_INT    		70		[LINE NO: 6]		int
IDENTIFIER			93		[LINE NO: 6]		topoSort
SYM_SB1      		36		[LINE NO: 6]		[
IDENTIFIER			93		[LINE NO: 6]		N
SYM_SB2      		37		[LINE NO: 6]		]
SYM_SEMICOLON		33		[LINE NO: 6]		;
KEYWD_INT    		70		[LINE NO: 8]		int
IDENTIFIER			93		[LINE NO: 8]		pos
OP_ASSGN     		34		[LINE NO: 8]		=
[INT_LIT]			88		[LINE NO: 8]		0
SYM_SEMICOLON		33		[LINE NO: 8]		;
KEYWD_DEF    		66		[LINE NO: 10]		def
IDENTIFIER			93		[LINE NO: 10]		dfs
SYM_B1       		38		[LINE NO: 10]		(
KEYWD_INT    		70		[LINE NO: 10]		int
IDENTIFIER			93		[LINE NO: 10]		node
SYM_B2       		39		[LINE NO: 10]		)
OP_FUNC      		41		[LINE NO: 10]		=>
KEYWD_VOID   		84		[LINE NO: 10]		void
SYM_P1       		31		[LINE NO: 10]		{
IDENTIFIER			93		[LINE NO: 12]		visited
SYM_SB1      		36		[LINE NO: 12]		[
IDENTIFIER			93		[LINE NO: 12]		node
SYM_SB2      		37		[LINE NO: 12]		]
OP_ASSGN     		34		[LINE NO: 12]		=
KEYWD_TRUE   		86		[LINE NO: 12]		true
SYM_SEMICOLON		33		[LINE NO: 12]		;
KEYWD_FOR    		46		[LINE NO: 14]		for
IDENTIFIER			93		[LINE NO: 14]		i
KEYWD_IN     		47		[LINE NO: 14]		in
SYM_B1       		38		[LINE NO: 14]		(
[INT_LIT]			88		[LINE NO: 14]		0
OP_COMMA     		35		[LINE NO: 14]		,
IDENTIFIER			93		[LINE NO: 14]		N
SYM_B2       		39		[LINE NO: 14]		)
KEYWD_IF     		43		[LINE NO: 15]		if
SYM_B1       		38		[LINE NO: 15]		(
OP_LOG_not   		14		[LINE NO: 15]		!
IDENTIFIER			93		[LINE NO: 15]		visited
SYM_SB1      		36		[LINE NO: 15]		[
IDENTIFIER			93		[LINE NO: 15]		node
OP_COMMA     		35		[LINE NO: 15]		,
IDENTIFIER			93		[LINE NO: 15]		i
SYM_SB2      		37		[LINE NO: 15]		]
SYM_B2       		39		[LINE NO: 15]		)
IDENTIFIER			93		[LINE NO: 16]		dfs
SYM_B1       		38		[LINE NO: 16]		(
IDENTIFIER			93		[LINE NO: 16]		i
SYM_B2       		39		[LINE NO: 16]		)
SYM_SEMICOLON		33		[LINE NO: 16]		;
IDENTIFIER			93		[LINE NO: 18]		topoSort
SYM_SB1      		36		[LINE NO: 18]		[
IDENTIFIER			93		[LINE NO: 18]		pos
OP_INCR      		28		[LINE NO: 18]		++
SYM_SB2      		37		[LINE NO: 18]		]
OP_ASSGN     		34		[LINE NO: 18]		=
IDENTIFIER			93		[LINE NO: 18]		node
SYM_SEMICOLON		33		[LINE NO: 18]		;
KEYWD_RETURN 		50		[LINE NO: 20]		return
SYM_SEMICOLON		33		[LINE NO: 20]		;
SYM_P2       		32		[LINE NO: 22]		}
KEYWD_DEF    		66		[LINE NO: 25]		def
IDENTIFIER			93		[LINE NO: 25]		main
SYM_B1       		38		[LINE NO: 25]		(
SYM_B2       		39		[LINE NO: 25]		)
OP_FUNC      		41		[LINE NO: 25]		=>
KEYWD_INT    		70		[LINE NO: 25]		int
SYM_P1       		31		[LINE NO: 25]		{
KEYWD_FOR    		46		[LINE NO: 27]		for
IDENTIFIER			93		[LINE NO: 27]		i
KEYWD_IN     		47		[LINE NO: 27]		in
SYM_B1       		38		[LINE NO: 27]		(
[INT_LIT]			88		[LINE NO: 27]		0
OP_COMMA     		35		[LINE NO: 27]		,
IDENTIFIER			93		[LINE NO: 27]		N
SYM_B2       		39		[LINE NO: 27]		)
SYM_P1       		31		[LINE NO: 27]		{
IDENTIFIER			93		[LINE NO: 28]		visited
SYM_SB1      		36		[LINE NO: 28]		[
IDENTIFIER			93		[LINE NO: 28]		i
SYM_SB2      		37		[LINE NO: 28]		]
OP_ASSGN     		34		[LINE NO: 28]		=
KEYWD_FALSE  		87		[LINE NO: 28]		false
SYM_SEMICOLON		33		[LINE NO: 28]		;
KEYWD_FOR    		46		[LINE NO: 29]		for
IDENTIFIER			93		[LINE NO: 29]		j
KEYWD_IN     		47		[LINE NO: 29]		in
SYM_B1       		38		[LINE NO: 29]		(
[INT_LIT]			88		[LINE NO: 29]		0
OP_COMMA     		35		[LINE NO: 29]		,
IDENTIFIER			93		[LINE NO: 29]		N
SYM_B2       		39		[LINE NO: 29]		)
IDENTIFIER			93		[LINE NO: 30]		g
SYM_SB1      		36		[LINE NO: 30]		[
IDENTIFIER			93		[LINE NO: 30]		i
OP_COMMA     		35		[LINE NO: 30]		,
IDENTIFIER			93		[LINE NO: 30]		j
SYM_SB2      		37		[LINE NO: 30]		]
OP_ASSGN     		34		[LINE NO: 30]		=
[INT_LIT]			88		[LINE NO: 30]		0
SYM_SEMICOLON		33		[LINE NO: 30]		;
SYM_P2       		32		[LINE NO: 31]		}
KEYWD_INT    		70		[LINE NO: 33]		int
IDENTIFIER			93		[LINE NO: 33]		m
SYM_SEMICOLON		33		[LINE NO: 33]		;
IDENTIFIER			93		[LINE NO: 34]		input
SYM_B1       		38		[LINE NO: 34]		(
[STR_LIT]			91		[LINE NO: 34]		"Enter number of edges: "
OP_COMMA     		35		[LINE NO: 34]		,
IDENTIFIER			93		[LINE NO: 34]		m
SYM_B2       		39		[LINE NO: 34]		)
SYM_SEMICOLON		33		[LINE NO: 34]		;
KEYWD_FOR    		46		[LINE NO: 36]		for
IDENTIFIER			93		[LINE NO: 36]		i
KEYWD_IN     		47		[LINE NO: 36]		in
SYM_B1       		38		[LINE NO: 36]		(
[INT_LIT]			88		[LINE NO: 36]		0
OP_COMMA     		35		[LINE NO: 36]		,
IDENTIFIER			93		[LINE NO: 36]		m
SYM_B2       		39		[LINE NO: 36]		)
SYM_P1       		31		[LINE NO: 36]		{
KEYWD_INT    		70		[LINE NO: 37]		int
IDENTIFIER			93		[LINE NO: 37]		u
OP_COMMA     		35		[LINE NO: 37]		,
IDENTIFIER			93		[LINE NO: 37]		v
SYM_SEMICOLON		33		[LINE NO: 37]		;
IDENTIFIER			93		[LINE NO: 38]		input
SYM_B1       		38		[LINE NO: 38]		(
[STR_LIT]			91		[LINE NO: 38]		"Enter u-v"
OP_COMMA     		35		[LINE NO: 38]		,
IDENTIFIER			93		[LINE NO: 38]		u
OP_COMMA     		35		[LINE NO: 38]		,
IDENTIFIER			93		[LINE NO: 38]		v
SYM_B2       		39		[LINE NO: 38]		)
SYM_SEMICOLON		33		[LINE NO: 38]		;
IDENTIFIER			93		[LINE NO: 39]		g
SYM_SB1      		36		[LINE NO: 39]		[
IDENTIFIER			93		[LINE NO: 39]		u
OP_AR_sub    		2		[LINE NO: 39]		-
[INT_LIT]			88		[LINE NO: 39]		1
SYM_SB2      		37		[LINE NO: 39]		]
SYM_SB1      		36		[LINE NO: 39]		[
IDENTIFIER			93		[LINE NO: 39]		v
OP_AR_sub    		2		[LINE NO: 39]		-
[INT_LIT]			88		[LINE NO: 39]		1
SYM_SB2      		37		[LINE NO: 39]		]
OP_ASSGN     		34		[LINE NO: 39]		=
[INT_LIT]			88		[LINE NO: 39]		1
SYM_SEMICOLON		33		[LINE NO: 39]		;
SYM_P2       		32		[LINE NO: 40]		}
KEYWD_FOR    		46		[LINE NO: 42]		for
IDENTIFIER			93		[LINE NO: 42]		i
KEYWD_IN     		47		[LINE NO: 42]		in
SYM_B1       		38		[LINE NO: 42]		(
[INT_LIT]			88		[LINE NO: 42]		0
OP_COMMA     		35		[LINE NO: 42]		,
IDENTIFIER			93		[LINE NO: 42]		N
SYM_B2       		39		[LINE NO: 42]		)
KEYWD_IF     		43		[LINE NO: 43]		if
SYM_B1       		38		[LINE NO: 43]		(
OP_LOG_not   		14		[LINE NO: 43]		!
IDENTIFIER			93		[LINE NO: 43]		visited
SYM_SB1      		36		[LINE NO: 43]		[
IDENTIFIER			93		[LINE NO: 43]		i
SYM_SB2      		37		[LINE NO: 43]		]
SYM_B2       		39		[LINE NO: 43]		)
IDENTIFIER			93		[LINE NO: 44]		dfs
SYM_B1       		38		[LINE NO: 44]		(
IDENTIFIER			93		[LINE NO: 44]		i
SYM_B2       		39		[LINE NO: 44]		)
SYM_SEMICOLON		33		[LINE NO: 44]		;
IDENTIFIER			93		[LINE NO: 46]		reverse
SYM_B1       		38		[LINE NO: 46]		(
IDENTIFIER			93		[LINE NO: 46]		topoSort
OP_COMMA     		35		[LINE NO: 46]		,
IDENTIFIER			93		[LINE NO: 46]		N
SYM_B2       		39		[LINE NO: 46]		)
SYM_SEMICOLON		33		[LINE NO: 46]		;
IDENTIFIER			93		[LINE NO: 48]		print
SYM_B1       		38		[LINE NO: 48]		(
[STR_LIT]			91		[LINE NO: 48]		"TopoSort:\n"
SYM_B2       		39		[LINE NO: 48]		)
SYM_SEMICOLON		33		[LINE NO: 48]		;
KEYWD_FOR    		46		[LINE NO: 49]		for
IDENTIFIER			93		[LINE NO: 49]		i
KEYWD_IN     		47		[LINE NO: 49]		in
SYM_B1       		38		[LINE NO: 49]		(
[INT_LIT]			88		[LINE NO: 49]		0
OP_COMMA     		35		[LINE NO: 49]		,
IDENTIFIER			93		[LINE NO: 49]		N
SYM_B2       		39		[LINE NO: 49]		)
IDENTIFIER			93		[LINE NO: 50]		print
SYM_B1       		38		[LINE NO: 50]		(
IDENTIFIER			93		[LINE NO: 50]		i
OP_AR_add    		1		[LINE NO: 50]		+
[STR_LIT]			91		[LINE NO: 50]		" "
SYM_B2       		39		[LINE NO: 50]		)
SYM_SEMICOLON		33		[LINE NO: 50]		;
IDENTIFIER			93		[LINE NO: 51]		print
SYM_B1       		38		[LINE NO: 51]		(
[STR_LIT]			91		[LINE NO: 51]		"\n"
SYM_B2       		39		[LINE NO: 51]		)
SYM_SEMICOLON		33		[LINE NO: 51]		;
KEYWD_RETURN 		50		[LINE NO: 53]		return
[INT_LIT]			88		[LINE NO: 53]		0
SYM_SEMICOLON		33		[LINE NO: 53]		;
SYM_P2       		32		[LINE NO: 54]		}
